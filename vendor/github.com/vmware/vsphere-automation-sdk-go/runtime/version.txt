Commit: org.ajoberstar.grgit.Commit(bb6a5cfacd3213780ecdab57a7911a55e9b0aa2a, bb6a5cf, [6ac4f13fb8c3d3429821cbd30c06dc7fb3df0a1c], org.ajoberstar.grgit.Person(Tianhao He, het@vmware.com), org.ajoberstar.grgit.Person(Tianhao He, het@vmware.com), 2019-12-25T14:19:11+08:00[GMT+08:00], [go runtime] Add user-agent support to goruntime

Following the user-agent func spec, the user-agent header for golang will be:
"<product>/<version> vAPI/<version> Go/<version> (<os_name>; <os_arch>)" (<os_version> info is not supported by go runtime)
A few examples:
"GoSDK/0.1.0 vAPI/2.100.0 Go/go1.13.5 (darwin; amd64)"
"terraform_provider_vmc/1.0.0 vAPI/2.100.0 Go/go1.13.5 (darwin; amd64)"
"vAPI/2.100.0 Go/go1.13.5 (darwin; amd64)" (product version not provided)

Proposed implementation:
1. The runtime version will be supplied by version.go. It has a const value "RuntimeVersion"
and default value is 2.100.0, represents the internal version. The version will be updated to
the public release version before releasing to github. This step will be covered by the same
script that converts the runtime import statements from gitlab urls to github urls.

2. The product user-agent will be provided by client code via application context. Code snippet as follows:
	connector := client.NewRestConnector("https://vmc.vmware.com", httpClient)

	appContextMap := map[string]*string{}
	userAgent := "terraform-provider-vmc/1.0.0"
	appContextMap[lib.HTTP_USER_AGENT_HEADER] = &userAgent
	connector.SetApplicationContext(core.NewApplicationContext(appContextMap))

3. If appContext contains user agent, it will be prepend to runtime user agent and
added to the final User-Agent header in the request

Testing:
1: http://vapi-jenkins.eng.vmware.com/view/(9)%20pre-checkin/job/vapi-core-precheckin/707/
2:
?       github.com/vmware/vsphere-automation-sdk-go/runtime    [no test files]
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/bindings   (cached)        coverage: 59.8% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/common     (cached)        coverage: 72.7% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/core       (cached)        coverage: 73.8% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/data       (cached)        coverage: 28.3% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/data/serializers/cleanjson (cached)        coverage: 92.4% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/data/serializers/rest      (cached)        coverage: 69.0% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/l10n       (cached)        coverage: 78.6% of statements
?       github.com/vmware/vsphere-automation-sdk-go/runtime/l10n/runtime       [no test files]
?       github.com/vmware/vsphere-automation-sdk-go/runtime/lib        [no test files]
?       github.com/vmware/vsphere-automation-sdk-go/runtime/lib/rest   [no test files]
?       github.com/vmware/vsphere-automation-sdk-go/runtime/log        [no test files]
?       github.com/vmware/vsphere-automation-sdk-go/runtime/metadata   [no test files]
?       github.com/vmware/vsphere-automation-sdk-go/runtime/metadata/info      [no test files]
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/protocol   (cached)        coverage: 0.0% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/client    1.997s  coverage: 47.5% of statements
?       github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/server    [no test files]
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/server/rest       (cached)        coverage: 39.5% of statements
?       github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/server/rpc        [no test files]
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/server/rpc/msg    (cached)        coverage: 32.7% of statements
?       github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/test      [no test files]
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/provider/introspection     (cached)        coverage: 31.7% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/provider/local     (cached)        coverage: 89.6% of statements
ok      github.com/vmware/vsphere-automation-sdk-go/runtime/security   (cached)        coverage: 76.3% of statements
?       github.com/vmware/vsphere-automation-sdk-go/runtime/security/test      [no test files]

review: https://reviewboard.eng.vmware.com/r/1611126/
, [go runtime] Add user-agent support to goruntime, Wed Dec 25 11:49:11 IST 2019, 1577254751)